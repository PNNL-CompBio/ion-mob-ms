FROM chambm/wine-dotnet:4.7-x64

# .NET 4+ on Wine 64-bit with base image Ubuntu-16.04
ENV WINEDEBUG -all
ENV WINEPATH "C:\pwiz"

# sudo needed to run wine when container is run as a non-default user (e.g. -u 1234)
# wine*_anyuser scripts are convenience scripts that work like wine/wine64 no matter what user calls them
# apt-get -y install sudo && \wine-gecko
RUN apt-get update && \
    apt-get -y install sudo && \
    apt-get -y clean && \
    echo "ALL     ALL=NOPASSWD:  ALL" >> /etc/sudoers && \
    echo '#!/bin/sh\nsudo -E -u root wine64 "$@"' > /usr/bin/wine64_anyuser && \
    echo '#!/bin/sh\nsudo -E -u root wine "$@"' > /usr/bin/wine_anyuser && \
    chmod ugo+rx /usr/bin/wine*anyuser && \
    rm -rf \
      /var/lib/apt/lists/* \
      /usr/share/doc \
      /usr/share/doc-base \
      /usr/share/man \
      /usr/share/locale \
      /usr/share/zoneinfo



#Install R and its Dependancies
RUN apt-get update && \
        apt-get upgrade -y && \
        apt-get install -y r-base
RUN apt-get install -y r-base
    

# create UIDs that Galaxy uses in default configs to launch docker containers; the UID must exist for sudo to work
RUN groupadd -r galaxy -g 1450 && \
    useradd -u 1450 -r -g galaxy -d /home/galaxy -c "Galaxy user" galaxy && \
    useradd -u 1000 -r -g galaxy -d /home/galaxy -c "Galaxy docker user" galaxy_docker && \
    useradd -u 2000 -r -g galaxy -d /home/galaxy -c "Galaxy Travis user" galaxy_travis && \
    useradd -u 999 -r -g galaxy -d /home/galaxy -c "usegalaxy.eu user" galaxy_eu

## Set up working directory and permissions to let user xclient save data
RUN mkdir /data
WORKDIR /data
ADD mywine /usr/bin/
RUN chmod ugo+rx /usr/bin/mywine

# Install necessary tools
RUN apt-get update \
    && apt-get install --no-install-recommends --yes git \
                                                    software-properties-common \
                                                    apt-transport-https \
                                                    curl \
                                                    unzip \
                                                    rake \
                                                    sudo \
                                                    wget \
                                                    libcurl3 \
    && apt-get clean

# install mono
ENV DEBIAN_FRONTEND noninteractive
RUN add-apt-repository ppa:git-core/ppa -y
RUN curl -s -o packages-microsoft-prod.deb https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \
    && sudo dpkg -i packages-microsoft-prod.deb
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb http://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.16.0.220 main" main | sudo tee /etc/apt/sources.list.d/mono-official.list \
    && apt-get update
RUN apt-get install -y mono-devel=5.16.0.220-0xamarin4+ubuntu1604b1 msbuild=1:16.0+xamarinxplat.2018.09.26.17.53-0xamarin3+ubuntu1604b1 dotnet-sdk-2.1

# install PNNL-Preprocessor
WORKDIR /
COPY ./PNNL-Preprocessor_4.0_2022.02.17.zip /
RUN unzip /PNNL-Preprocessor_4.0_2022.02.17.zip


COPY R_Metadata_I.R /tmp
RUN mkdir -p /tmp/II_Preprocessed


#clean unnecessary packages
# RUN  apt-get -y remove  curl \
#                         git \
#                         unzip \
#                         libcurl3 \
#      &&  apt-get -y autoremove && apt-get clean
# Run
# ENTRYPOINT ["wine", "/PNNL-Preprocessor_4.0_2022.02.17/PNNL-PreProcessor.exe"]
